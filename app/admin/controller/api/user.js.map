{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/user.js"
    ],
    "names": [
        "getAction",
        "self",
        "where",
        "id",
        "get",
        "status",
        "type",
        "_logic",
        "modelInstance",
        "field",
        "postAction",
        "generateKey",
        "data",
        "post",
        "addUser",
        "ip",
        "insertId",
        "success",
        "isAdmin",
        "userInfo",
        "firekylin",
        "USER_ADMIN",
        "failed",
        "app_key",
        "think",
        "uuid",
        "app_secret",
        "find",
        "user",
        "model",
        "getOptions",
        "options",
        "transporter",
        "createTransport",
        "site_url",
        "hasOwnProperty",
        "http",
        "host",
        "sendMail",
        "from",
        "to",
        "email",
        "subject",
        "title",
        "text",
        "putAction",
        "fail",
        "saveUser",
        "rows",
        "affectedRows"
    ],
    "mappings": "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",
    "file": "../../../../src/admin/controller/api/user.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport nodemailer from 'nodemailer';\n\nexport default class extends Base {\n  /**\n   * get\n   * @return {[type]} [description]\n   */\n  getAction(self){\n    let where = {};\n    if( this.id ) {\n      where.id = this.id;\n    } else {\n      if(this.get('type') === 'contributor') {\n        where = {status: 2, type: 3};\n      } else {\n        where = {status: ['!=', 2], type: ['!=', 3], _logic: 'OR'};\n      }\n    }\n    this.modelInstance.field('id,name,display_name,email,type,status,create_time,last_login_time,app_key,app_secret').where(where);\n    return super.getAction(self);\n  }\n  /**\n   * add user\n   * @return {[type]} [description]\n   */\n  async postAction(self){\n    if( this.get('type') === 'key' ) {\n      return await this.generateKey(self);\n    }\n\n    let data = this.post();\n    let insertId = await this.modelInstance.addUser(data, this.ip());\n    return this.success({id: insertId});\n  }\n\n  async generateKey(self, status) {\n    let isAdmin = this.userInfo.type === firekylin.USER_ADMIN;\n    // let isMine = this.userInfo.id === this.id;\n    if( !isAdmin ) {\n      return this.failed();\n    }\n\n    let app_key = think.uuid();\n    let app_secret = think.uuid();\n\n    await this.modelInstance.generateKey(this.id, app_key, app_secret, status);\n    //TODO: 增加邮件发送 app_key 和 app_secret 的功能\n    let user = await this.modelInstance.where({id: this.id}).find();\n    let options = await this.model('options').getOptions();\n    let transporter = nodemailer.createTransport();\n    let site_url = options.hasOwnProperty('site_url') ? options.site_url : `http://${http.host}`;\n    transporter.sendMail({\n      from: 'no-reply@firekylin.org',\n      to: user.email,\n      subject: `【${options.title}】网站推送申请成功`,\n      text: `你的推送申请审批通过，请将下面的信息添加到自己的博客中完成最后的推送操作。\n        网站名称：${options.title}\n        网站地址：${site_url}\n        app_key: ${app_key}\n        app_secret: ${app_secret}\n      `\n    });\n\n\n    if(status != null) { this.id = null; }\n    return await this.getAction(self);\n  }\n  /**\n   * update user info\n   * @return {[type]} [description]\n   */\n  async putAction(self){\n    let type = this.get('type');\n\n    if (!this.id) {\n      return this.fail('PARAMS_ERROR');\n    }\n\n    if(type === 'contributor') {\n      return await this.generateKey(self, 1);\n    }\n    \n    let data = this.post();\n    data.id = this.id;\n    let rows = await this.modelInstance.saveUser(data, this.ip());\n    return this.success({affectedRows: rows});\n  }\n}\n"
    ]
}